<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config  mock-connectors="false" mock-inbounds="false" name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:globals.xml"/>
        <spring:import resource="classpath:sys-sfdc/processcustomer.xml"/>
        <spring:import resource="classpath:sys-sfdc/updateaddress.xml"/>
    </spring:beans>
    <munit:test name="processcustomerFlowTest" description="Test">
        <mock:when messageProcessor="mule:flow" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="name" whereValue="#[matchContains('updateaddressFlow')]"/>
            </mock:with-attributes>
            <mock:then-return payload="#[success = true]" mimeType="application/java"/>
        </mock:when>
        <mock:when messageProcessor="sfdc:upsert" doc:name="Mock">
            <mock:then-return payload="{ &quot;success&quot;: &quot;true&quot; }" mimeType="application/java"/>
        </mock:when>
        <mock:when messageProcessor="sfdc:query" doc:name="Mock">
            <mock:then-return payload="[ {&quot;Id&quot;: &quot;A1&quot;}, {&quot;Id&quot;: &quot;B2&quot;} ]" mimeType="application/java"/>
        </mock:when>

        <set-payload value="#[getResource('example/oracle-account-sample.json').asString()]" mimeType="application/json" doc:name="Set Payload"/>

        <flow-ref name="processCustomerFlow" doc:name="processCustomerFlow"/>

        <munit:assert-on-equals message="Payload Incorrect" expectedValue="18153" actualValue="#[flowVars.customerRecord.accountId]" doc:name="Assert Equals"/>
    </munit:test>
</mule>
